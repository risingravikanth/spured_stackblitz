{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"AAEA,MAAM,kBAAkB,GAAQ;IAC9B,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;CAC1C;AAED,MAAM,oBAAoB,GAAQ;IAChC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;CAC1C;AAED,MAAM,mBAAmB,GAAQ;IAC/B,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;CAChC;AAED,MAAM,uBAAuB,UAA0B,EAAE,UAA2B;IAClF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,UAAU,CAAC;KACnB;IACD,MAAM,CAAC;QACL,IAAI,EAAE,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI;QACpE,MAAM,EAAE,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM;QAC5E,OAAO,EAAE,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO;QAChF,MAAM,EAAE,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM;QAC5E,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ;KACrF,CAAC;CACH;AAED,MAAM,iCAAiC,GAAW;IAChD,IAAI,CAAC;QACH,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;KAChC;IAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACX,MAAM,CAAC,GAAG,CAAC;KACZ;CACF;AAED,MAAM,wBAAwB,GAAW;IACvC,IAAI,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACxB;IAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACX,MAAM,CAAC,GAAG,CAAC;KACZ;CACF","sourcesContent":["import { CookiesOptions } from './cookies-options';\n\nexport function isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string';\n}\n\nexport function mergeOptions(oldOptions: CookiesOptions, newOptions?: CookiesOptions): CookiesOptions {\n  if (!newOptions) {\n    return oldOptions;\n  }\n  return {\n    path: isPresent(newOptions.path) ? newOptions.path : oldOptions.path,\n    domain: isPresent(newOptions.domain) ? newOptions.domain : oldOptions.domain,\n    expires: isPresent(newOptions.expires) ? newOptions.expires : oldOptions.expires,\n    secure: isPresent(newOptions.secure) ? newOptions.secure : oldOptions.secure,\n    httpOnly: isPresent(newOptions.httpOnly) ? newOptions.httpOnly : oldOptions.httpOnly\n  };\n}\n\nexport function safeDecodeURIComponent(str: string): string {\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nexport function safeJsonParse(str: string): { [key: string]: any } | string {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return str;\n  }\n}\n"]}