{"remainingRequest":"E:\\Ravikanth\\spured_new\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!E:\\Ravikanth\\spured_new\\node_modules\\@ngx-utils\\cookies\\src\\utils.js","dependencies":[{"path":"E:\\Ravikanth\\spured_new\\node_modules\\@ngx-utils\\cookies\\src\\utils.js","mtime":499162500000},{"path":"E:\\Ravikanth\\spured_new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1571556314130},{"path":"E:\\Ravikanth\\spured_new\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["export function isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexport function isString(obj) {\n    return typeof obj === 'string';\n}\nexport function mergeOptions(oldOptions, newOptions) {\n    if (!newOptions) {\n        return oldOptions;\n    }\n    return {\n        path: isPresent(newOptions.path) ? newOptions.path : oldOptions.path,\n        domain: isPresent(newOptions.domain) ? newOptions.domain : oldOptions.domain,\n        expires: isPresent(newOptions.expires) ? newOptions.expires : oldOptions.expires,\n        secure: isPresent(newOptions.secure) ? newOptions.secure : oldOptions.secure,\n        httpOnly: isPresent(newOptions.httpOnly) ? newOptions.httpOnly : oldOptions.httpOnly\n    };\n}\nexport function safeDecodeURIComponent(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\nexport function safeJsonParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n//# sourceMappingURL=utils.js.map",null]}